@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 237 76% 25%;
    --primary-foreground: 0 0% 98%;

    --secondary: 237 76% 96%;
    --secondary-foreground: 237 76% 25%;

    --muted: 237 76% 96%;
    --muted-foreground: 237 20% 50%;

    --accent: 35 88% 55%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    /* Yellow accent colors */
    --yellow: 45 93% 58%;
    --yellow-foreground: 0 0% 10%;
    --yellow-light: 45 93% 68%;
    --yellow-dark: 45 93% 48%;

    /* Red accent colors */
    --red: 0 84% 60%;
    --red-foreground: 0 0% 98%;
    --red-light: 0 84% 70%;
    --red-dark: 0 84% 50%;

    --border: 237 30% 90%;
    --input: 237 30% 90%;
    --ring: 237 76% 25%;

    /* Custom design tokens */
    --primary-dark: 237 76% 20%;
    --primary-light: 237 76% 35%;
    --accent-light: 35 88% 65%;
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary-light)));
    --gradient-accent: linear-gradient(135deg, hsl(var(--accent)), hsl(var(--accent-light)));
    --gradient-yellow: linear-gradient(135deg, hsl(var(--yellow)), hsl(var(--yellow-light)));
    --gradient-red: linear-gradient(135deg, hsl(var(--red)), hsl(var(--red-light)));
    --shadow-elegant: 0 10px 30px -10px hsl(var(--primary) / 0.2);
    --shadow-glow: 0 0 40px hsl(var(--accent) / 0.3);
    --shadow-yellow: 0 0 30px hsl(var(--yellow) / 0.4);
    --shadow-red: 0 0 30px hsl(var(--red) / 0.3);
    
    /* 3D Effect Variables */
    --perspective: 1000px;
    --preserve-3d: preserve-3d;
    --transform-style: preserve-3d;

    --radius: 0.5rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    /* Dark mode yellow accent colors */
    --yellow: 45 93% 58%;
    --yellow-foreground: 0 0% 10%;
    --yellow-light: 45 93% 68%;
    --yellow-dark: 45 93% 48%;

    /* Dark mode red accent colors */
    --red: 0 84% 60%;
    --red-foreground: 0 0% 98%;
    --red-light: 0 84% 70%;
    --red-dark: 0 84% 50%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    perspective: var(--perspective);
  }
}

/* 3D Effect Utilities */
@layer utilities {
  .transform-3d {
    transform-style: preserve-3d;
  }

  .perspective {
    perspective: var(--perspective);
  }

  .preserve-3d {
    transform-style: preserve-3d;
  }

  /* 3D Card Effects */
  .card-3d {
    transform: perspective(1000px) rotateX(0deg) rotateY(0deg);
    transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;
  }

  .card-3d:hover {
    transform: perspective(1000px) rotateX(-5deg) rotateY(5deg) translateZ(20px);
    box-shadow: 
      0 25px 50px -12px rgba(0, 0, 0, 0.25),
      0 0 0 1px rgba(255, 255, 255, 0.1);
  }

  /* 3D Button Effects */
  .btn-3d {
    transform: perspective(600px) rotateX(0deg);
    transition: all 0.2s ease-out;
    position: relative;
  }

  .btn-3d:hover {
    transform: perspective(600px) rotateX(-10deg) translateZ(10px);
  }

  .btn-3d:active {
    transform: perspective(600px) rotateX(5deg) translateZ(-5px);
  }

  /* 3D Icon Effects */
  .icon-3d {
    transform: perspective(300px) rotateX(0deg) rotateY(0deg);
    transition: transform 0.3s ease-out;
  }

  .icon-3d:hover {
    transform: perspective(300px) rotateX(15deg) rotateY(15deg) translateZ(10px);
  }

  /* Floating 3D Effect */
  .float-3d {
    animation: float3d 6s ease-in-out infinite;
  }

  @keyframes float3d {
    0%, 100% { 
      transform: perspective(1000px) rotateX(0deg) rotateY(0deg) translateZ(0px);
    }
    25% { 
      transform: perspective(1000px) rotateX(2deg) rotateY(-2deg) translateZ(10px);
    }
    50% { 
      transform: perspective(1000px) rotateX(0deg) rotateY(2deg) translateZ(5px);
    }
    75% { 
      transform: perspective(1000px) rotateX(-2deg) rotateY(0deg) translateZ(15px);
    }
  }

  /* Parallax Layers */
  .parallax-near {
    transform: perspective(1000px) translateZ(50px);
  }

  .parallax-mid {
    transform: perspective(1000px) translateZ(0px);
  }

  .parallax-far {
    transform: perspective(1000px) translateZ(-50px);
  }

  /* 3D Image Gallery Effects */
  .gallery-3d {
    transform: perspective(800px) rotateY(0deg);
    transition: all 0.4s ease-out;
    transform-origin: center center;
  }

  .gallery-3d:hover {
    transform: perspective(800px) rotateY(-10deg) rotateX(5deg) scale(1.05);
  }

  /* Tilt Effect for Cards */
  .tilt-3d {
    transform: perspective(1000px) rotateX(0deg) rotateY(0deg);
    transition: transform 0.3s ease-out;
  }

  .tilt-3d:hover {
    transform: perspective(1000px) rotateX(var(--rotate-x, 0deg)) rotateY(var(--rotate-y, 0deg));
  }
}